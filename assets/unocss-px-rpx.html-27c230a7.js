import{_ as e,r as o,o as c,c as i,b as n,d as s,e as p,a as t}from"./app-6cff156c.js";const l={},u=t(`<p>最近公司在做小程序的项目，因为之前一直在写 web 项目，经常使用 unocss 这个工具，所以这次也想在 uniapp 里面使用这个插件。但是遇到了 px 转换为 upx 的问题。众所周知，uniapp 的单位是 rpx，也是小程序的尺寸单位，所以在这里自行编写了一个插件。</p><p>最开始是用处的开源社区的一个项目，使用之后发现指令处理有问题，例如 height 400px 会被处理为 100rem， 但是如果是 line height 400px 就会被处理成很离谱的数字。我大概看拉一下作者的实现，感觉过于复杂了，本着自己的需求就开发一个适合自己的插件。</p><p>先说一下思路，在 uniapp 的多端编译里面也有多种尺寸单位，web端是 rem，小程序端是 rpx， rpx -&gt; rem uniapp 内部已经处理了。所以我们只需要将 px 转为 rpx。剩下的就丢给 uniapp处理。</p><p>其实代码很简单，模仿官方预设 @unocss/preset-rem-to-px 这个插件就可以搞定。下面的核心代码就是 <code>i[1] = value.replace(pxToVwRE, (_, p1) =&gt; </code>\${p1}rpx<code>);</code> 匹配到字符串的 px 将其替换为 rpx。其实大部分逻辑 unocss 都已经帮我们处理好了。</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> pxToVwRE <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(-?[\\.\\d]+)px</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token function">pxToVwPreset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;@unocss/preset-px-to-upx&#39;</span><span class="token punctuation">,</span>
    <span class="token function-variable function">postprocess</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">util</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      util<span class="token punctuation">.</span>entries<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> value <span class="token operator">=</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span> <span class="token operator">&amp;&amp;</span> pxToVwRE<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> value<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>pxToVwRE<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> p1</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>p1<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">rpx</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在使用的过程中也遇到问题，就是在使用 unocss 的指令时出现了 uniapp 没有处理的单位。</p><p><img src="https://cdn.jsdelivr.net/gh/Journey98/A-week-to-learn@assert/image/47c1735b0d9b09a4fe2911acf9a916d66d6037f9405d2161775c6f22e2fa48a0.png" alt="图 0"></p><p><img src="https://cdn.jsdelivr.net/gh/Journey98/A-week-to-learn@assert/image/ecaaecc35c054bcabc42900839c3a60a2bf82a2913c975893369ff7547bb032d.png" alt="图 1"></p><p>这里的问题是因为在 vite 的执行顺序上 unocss 的 transformerDirectives 模块处理时机晚于 uniapp 插件的处理时间那么就会出现上面的现象。所以要配置一下 unocss 的 transformerDirectives 处理时机</p>`,9),r={href:"https://unocss.dev/config/transformers#transformers",target:"_blank",rel:"noopener noreferrer"},k={href:"https://cn.vitejs.dev/guide/api-plugin.html#plugin-ordering",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[n("code",null,"transformerDirectives({ enforce: 'pre', })")],-1),v={href:"https://github.com/unocss/unocss/blob/bda907f15ed2ae0631dd493a3fe21f037f0ed114/packages/vite/src/index.ts#L44",target:"_blank",rel:"noopener noreferrer"},m=t(`<div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">function</span> <span class="token generic-function"><span class="token function">UnocssPlugin</span><span class="token generic class-name"><span class="token operator">&lt;</span>Theme <span class="token keyword">extends</span> object<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>
  configOrPath<span class="token operator">?</span><span class="token operator">:</span> VitePluginConfig<span class="token operator">&lt;</span>Theme<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  defaults<span class="token operator">:</span> UserConfigDefaults <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">)</span><span class="token operator">:</span> Plugin<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> ctx <span class="token operator">=</span> <span class="token generic-function"><span class="token function">createContext</span><span class="token generic class-name"><span class="token operator">&lt;</span>VitePluginConfig<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>configOrPath <span class="token keyword">as</span> <span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    envMode<span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">&#39;development&#39;</span> <span class="token operator">?</span> <span class="token string">&#39;dev&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;build&#39;</span><span class="token punctuation">,</span>
    <span class="token operator">...</span>defaults<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> inlineConfig <span class="token operator">=</span> <span class="token punctuation">(</span>configOrPath <span class="token operator">&amp;&amp;</span> <span class="token keyword">typeof</span> configOrPath <span class="token operator">!==</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> <span class="token operator">?</span> configOrPath <span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">const</span> mode <span class="token operator">=</span> inlineConfig<span class="token punctuation">.</span>mode <span class="token operator">??</span> <span class="token string">&#39;global&#39;</span>

  <span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token function">ConfigHMRPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">createTransformerPlugins</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">createDevtoolsPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> inlineConfig<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;unocss:api&#39;</span><span class="token punctuation">,</span>
      api<span class="token operator">:</span> <span class="token operator">&lt;</span>UnocssVitePluginAPI<span class="token operator">&gt;</span><span class="token punctuation">{</span>
        <span class="token function-variable function">getContext</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">,</span>
        <span class="token function-variable function">getMode</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mode<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>inlineConfig<span class="token punctuation">.</span>inspector <span class="token operator">!==</span> <span class="token boolean">false</span><span class="token punctuation">)</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">UnocssInspector</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;per-module&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">PerModuleModePlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;vue-scoped&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">VueScopedPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// @ts-expect-error alerts users who were already using this mode before it became its own package</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;svelte-scoped&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&#39;[unocss] svelte-scoped mode is now its own package, please use @unocss/svelte-scoped according to the docs&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;shadow-dom&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token function">ShadowDomModuleModePlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;global&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token function">GlobalModePlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mode <span class="token operator">===</span> <span class="token string">&#39;dist-chunk&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    plugins<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>
      <span class="token function">ChunkModeBuildPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token operator">...</span><span class="token function">GlobalModeDevPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">[unocss] unknown mode &quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>mode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">return</span> plugins<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>Boolean<span class="token punctuation">)</span> <span class="token keyword">as</span> Plugin<span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看到 unocss 最终返回的是一个插件数组, 这就代表着 unocss 内部返回了多个适用于 vite 的插件, vite 会一个一个执行他们.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>  <span class="token keyword">const</span> plugins <span class="token operator">=</span> <span class="token punctuation">[</span>
    <span class="token function">ConfigHMRPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">createTransformerPlugins</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token operator">...</span><span class="token function">createDevtoolsPlugin</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> inlineConfig<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      name<span class="token operator">:</span> <span class="token string">&#39;unocss:api&#39;</span><span class="token punctuation">,</span>
      api<span class="token operator">:</span> <span class="token operator">&lt;</span>UnocssVitePluginAPI<span class="token operator">&gt;</span><span class="token punctuation">{</span>
        <span class="token function-variable function">getContext</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> ctx<span class="token punctuation">,</span>
        <span class="token function-variable function">getMode</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> mode<span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果你的 vite.config.ts 是这样的</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> resolve <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;node:path&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;vite&#39;</span>
<span class="token keyword">import</span> uni <span class="token keyword">from</span> <span class="token string">&#39;@dcloudio/vite-plugin-uni&#39;</span>
<span class="token keyword">import</span> AutoImport <span class="token keyword">from</span> <span class="token string">&#39;unplugin-auto-import/vite&#39;</span>
<span class="token keyword">import</span> UnoCSS <span class="token keyword">from</span> <span class="token string">&#39;unocss/vite&#39;</span>

<span class="token comment">// import Components from &#39;unplugin-vue-components/vite&#39;</span>

<span class="token keyword">import</span> Components <span class="token keyword">from</span> <span class="token string">&#39;@uni-helper/vite-plugin-uni-components&#39;</span>

<span class="token comment">// https://vitejs.dev/config/</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>

  plugins<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">UnoCSS</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">AutoImport</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      imports<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pinia&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      dts<span class="token operator">:</span> <span class="token string">&#39;./typing/auto-imports.d.ts&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">Components</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      dirs<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/components/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;src/uni_modules/hex-ui/&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;src/uni_modules/z-paging/components/&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      dts<span class="token operator">:</span> <span class="token string">&#39;./typing/components.d.ts&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token function">uni</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  resolve<span class="token operator">:</span> <span class="token punctuation">{</span>
    alias<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&#39;@&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
      <span class="token string-property property">&#39;@components&#39;</span><span class="token operator">:</span> <span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;./src/components/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>那么 vite 的 plugin 的参数最终是</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>plugins<span class="token operator">:</span> <span class="token punctuation">[</span> unocss 返回的插件就是类似一个数组的 <span class="token punctuation">[</span><span class="token function">PluginA</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* PluginA configuration */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">PluginB</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* PluginB configuration */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">PluginC</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token comment">/* PluginC configuration */</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Components 返回的插件 xxxx <span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>这个时候如果你的 unocss 内部的 transformer 设置了 enforce: &#39;pre&#39;, 那么最终被 unocss 返回出来的就是一个强制修改执行顺序的插件, vite 执行这个插件的时候就会优先执行这个设置了 <code>enforce: &#39;pre&#39;</code> 的插件</p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用" aria-hidden="true">#</a> 使用</h2><p>下面是正确的使用方式。这里会发现多了一个 <code>@unocss/preset-rem-to-px</code> 这个插件是为了兼容以下使用方式 <code>&lt;div class=&quot;w-30&quot;&gt;&lt;/div&gt;</code>, 这个时候就需要将 rem 转为 px了。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss/vite&#39;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> presetUno <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;unocss&#39;</span>
<span class="token keyword">import</span> transformerDirectives <span class="token keyword">from</span> <span class="token string">&#39;@unocss/transformer-directives&#39;</span>
<span class="token keyword">import</span> pxToUpx <span class="token keyword">from</span> <span class="token string">&#39;unocss-preset-px-to-rpx&#39;</span>
<span class="token keyword">import</span> presetRemToPx <span class="token keyword">from</span> <span class="token string">&#39;@unocss/preset-rem-to-px&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">defineConfig</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token comment">//@ts-ignore</span>
  presets<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">presetUno</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">presetRemToPx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">pxToUpx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  transformers<span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token function">transformerDirectives</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      enforce<span class="token operator">:</span> <span class="token string">&#39;pre&#39;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2023-12-29-更新" tabindex="-1"><a class="header-anchor" href="#_2023-12-29-更新" aria-hidden="true">#</a> 2023.12.29 更新</h3><p>这段时间忙于工作没有更新此篇博客。</p><p>之前所处理的 css 单位转换还不足以让 unocss 完美的适配在 uniapp 里面, 之前的处理只处理了 css 文件代码。 在 html 的 class 类名在小程序里面也有兼容问题, 并且css 的类名修改之后要和 html 标签的类名关联起来, 所以需要 unocss 内部的 transform 处理。</p><p>大概思路就是, 在 transform 里面我们可以修改 vue 文件的源码, 然后根据自己的规则来匹配类名, 然后将不兼容小程序的类名转换为一些符号或者字符串, 然后最终的代码可以运行在小程序的环境中。</p><p>transform 和 preset 的关系是缺一不可的, 你可以想象一下, 如果preset 处理了 css 文件, 当 css 文件的类名修改之后, 肯定就和 html 里面的类名对应不上了, 所以 html 标签类名也是需要修改的, 这样处理后的类名才能相互关联起来, css 才能生效。</p><p>思路有了, 实现起来就不难了, 虽然这次没有完美的实现适配，在这次的探索中也让我对 unocss 理解的更深了。</p>`,17),g={href:"https://github.com/MellowCo/unocss-preset-weapp",target:"_blank",rel:"noopener noreferrer"};function b(f,w){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,n("p",null,[n("a",r,[s("unocss transformers 地址"),p(a)])]),n("p",null,[n("a",k,[s("vite文档 enforce 字段"),p(a)])]),d,n("p",null,[n("a",v,[s("unocss 源码地址"),p(a)])]),m,n("p",null,[s("关于此功能, 已经有作者实现了 "),n("a",g,[s("unocss-preset-weapp"),p(a)]),s("。我偶尔也会看看里面 issue，给出一些解答。")])])}const y=e(l,[["render",b],["__file","unocss-px-rpx.html.vue"]]);export{y as default};
